name: Optimize e2e cloud test

on:
  pull_request:
    paths:
      - ".github/actions/**"
      - ".github/workflows/optimize-*"
      - "bom/*"
      - "parent/*"
      - "pom.xml"
      - "optimize/**"
      - "optimize.Dockerfile"
  push:
    branches:
      - "main"
      - "stable/**"
      - "release/**"
    paths:
      - ".github/actions/**"
      - ".github/workflows/optimize-*"
      - "bom/*"
      - "parent/*"
      - "pom.xml"
      - "optimize/**"
      - "optimize.Dockerfile"
  workflow_dispatch:

jobs:
  e2e-cloud-test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - name: Checkout code
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4
    - name: Import secrets
      id: secrets
      uses: hashicorp/vault-action@8b7eaceb79bd7be97b311993e7c1cc5d051213c7
      with:
        url: ${{ secrets.VAULT_ADDR }}
        method: approle
        roleId: ${{ secrets.VAULT_ROLE_ID }}
        secretId: ${{ secrets.VAULT_SECRET_ID }}
        secrets: |
          secret/data/products/optimize/ci/camunda-optimize AUTH0_CLIENTSECRET;
          secret/data/products/optimize/ci/camunda-optimize AUTH0_USEREMAIL;
          secret/data/products/optimize/ci/camunda-optimize AUTH0_USERPASSWORD;
    - name: Setup Maven
      uses: ./.github/actions/setup-maven
      with:
          secrets: ${{ toJSON(secrets) }}
          java-version: 21
          distribution: zulu
    - name: "Read Java / Version Info"
      id: "pom-info"
      uses: YunaBraska/java-info-action@main
    - name: Start Elastic search
      uses: ./.github/actions/compose
      with:
        compose_file: .github/actions/compose/docker-compose.elasticsearch.yml
        project_name: elasticsearch
      env:
        ELASTIC_VERSION: ${{ steps.pom-info.outputs.x_elasticsearch_test_version }}
        ELASTIC_JVM_MEMORY: 1
        ELASTIC_HTTP_PORT: ${{ steps.pom-info.outputs.x_new_elasticsearch_port }}
    - name: Setup NodeJS
      uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4
      with:
        node-version: ${{ steps.pom-info.outputs.x_version_node }}
    - uses: camunda/infra-global-github-actions/setup-yarn-cache@main
      with:
        directory: optimize/client
    - name: Install node dependencies
      working-directory: ./optimize/client
      run: yarn install
    - name: 'build backend & frontend'
      run: mvn clean install -DskipTests -Dskip.docker -pl optimize/backend -am
    - name: 'start backend'
      working-directory: ./optimize/client
      run: |
        yarn run start-backend-cloud ci &
    - name: Start frontend app
      working-directory: ./optimize/client
      run: yarn start &
    - name: Wait for backend to start
      run: ./.github/optimize/scripts/wait-for.sh http://localhost:8090/api/readyz
    - name: Wait for frontend to start
      run: ./.github/optimize/scripts/wait-for.sh http://localhost:3000/ready
    - name: 'start e2e test'
      working-directory: ./optimize/client
      env:
        AUTH0_CLIENTSECRET: "${{ steps.secrets.outputs.AUTH0_CLIENTSECRET }}"
        AUTH0_USEREMAIL: "${{ steps.secrets.outputs.AUTH0_USEREMAIL }}"
        AUTH0_USERPASSWORD: "${{ steps.secrets.outputs.AUTH0_USERPASSWORD }}"
      run: yarn run e2e:ci:cloud:headless
